#!/usr/bin/awk -f
BEGIN {
# this program creates the first input file for orca
# JAN 2020 1.0 version, based on 2010 version progdyn
# read progdyn.conf for configuration info

# default parameters, including quassiclassical, no displacements, transition state, not a DRP
# do not change these - rather, change progdyn.conf to set the parameters
	initialDis = 0; timestep = 1E-15; scaling = 1.0; temp = 298.15;
	classical = 0; numimag = 1; DRP = 0; cannonball = 0;
	memory = 4096;
	diag = 1; searchdir = "positive"; boxon = 0;
	boxsize = 10; maxAtomMove = 0.1; title1 = "you"; title2 = "need";
	title3 = "a"; title4 = "progdyn.conf"; processors = 1; highlevel = 999;

#initialization
	i = 1; j = 1; k = 1;
	c = 29979245800; h = 6.626075E-34; avNum = 6.0221415E23;
	RgasK = 0.00198588; RgasJ = 8.31447;
	numAtoms = 0; atomnumber = 0;

# read progdyn.conf for configuration info
	do {
		getline < "progdyn.conf";
		if ($1 == "method") method = $2;
		if ($1 == "basis") basis = $2;
		if ($1 == "charge") charge = $2;
		if ($1 == "multiplicity") multiplicity = $2;
		if ($1 == "memory") memory = $2;
		if ($1 == "processors") processors = $2;
		if ($1 == "timestep") timestep = $2;
		if ($1 == "diagnostics") diag = $2;
		if ($1 == "method2") meth2 = $2;
		if ($1 == "method3") meth3 = $2;
		if ($1 == "method4") meth4 = $2;
		if ($1 == "highlevel") highlevel = $2;
		if ($1 == "fixedatom1") fixedatom1 = $2;
		if ($1 == "fixedatom2") fixedatom2 = $2;
		if ($1 == "fixedatom3") fixedatom3 = $2;
		if ($1 == "fixedatom4") fixedatom4 = $2;
		if ($1 == "methodfile") methodfilelines = $2;
		if ($1 == "title") {
			title1 = $2;
			title2 = $3;
			title3 = $4;
			title4 = $5;
		}
		blankLineTester = length($0);
	}
	while(blankLineTester > 1);

	if (diag == 1) {
		print "***************** starting prog1stpoint *****************" >> "diagnostics";
		print "method, basis, charge, multiplicity, memory" >> "diagnostics";
		print method, basis, charge, multiplicity, memory >> "diagnostics";
		print "processors, checkpoint, title" >> "diagnostics";
		print processors, checkpoint, title1, title2, title3, title4 >> "diagnostics";
	}

	getline < "isomernumber";
	isomernum = $1;
#read in number of atoms, geometry, masses, and velocity from geoPlusVel
	getline < "geoPlusVel";
	numAtoms = $1;
# geometry
	for (i = 1; i <= numAtoms; i++) {
		getline < "geoPlusVel";
		atSym[i] = $1;
		for (j = 1; j <= 3; j++) geoArr[i,j] = $(1 + j);
	}
}

END {
	print "! ", method, basis, meth2, meth3, meth4, " EnGrad nopop";
	print "%pal";
	print "nprocs ", processors;
	print "end";
	print "%maxcore ", memory;
# make the title four words exactly, leaving out spaces if necessary
	print "# ", title1, title2, title3, title4;
	print "# runpoint 1";
	print "# runisomer ", isomernum;
	print "* xyz ", charge, multiplicity;
	for (i = 1; i <= numAtoms; i++) {
		printf(" %s %.7f %.7f %.7f", atSym[i], geoArr[i,1], geoArr[i,2], geoArr[i,3]);
		if (i > highlevel) printf(" %s", "M");
		print "";
	}
	print "*";
	if (methodfilelines >= 1) {
		for (i = 1; i <= methodfilelines; i++) {
			getline < "methodfile";
			print $0;
		}
	}
print "";
}