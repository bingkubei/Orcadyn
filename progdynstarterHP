#!/bin/bash
# JAN 2020 1.0 version, based on 2010 version progdyn
#
#   only handles up to 4000th excited state for modes - this could start to affect the initialization of classical modes or transition vectors at
#    extremely high temperatures
#   This should handle ordinary calculations HF, DFT, ONIOM, and MP2 calculatons but the routine in prog2ndpoint would have to be changed for other calcs.
#
#                                        OUTLINE
# A. initilize to perform orca jobs and know where we are
#    start loop
# B. if no file named "skipstart" then generate a new isomer.  Instructions: Get rid of skipstart to start new isomer.
#    the B loop generates geoPlusVel, adds it to geoRecord, generates and runs first and second points, and sets up for continuous loop
# C. loop over propagation steps
#
#  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

echo ORIGDIR:
echo $origdir
echo SCRATCHDIR:
echo $scratchdir
echo PROGGRAMDIR:
echo $proggramdir

rm -f nogo    # assume that if someone is starting a job, they want it to go.
rm -f diagnostics # contains extra info from start of progFS

#### Triple 'while' loop - will have to break multiple times to get out, but advantage is ability to control starting over
while (true)
do

# As long as there is a file "goingwell" the program will not exit entirely by itself
    rm -f goingwell
    while (true)
    do
#  BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
        if (test -f skipstart) then
            echo "skipping start and continuing from previous runs"
        else
#  B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1 generate geoPlusVel and first input file
            cd $origdir
            echo 3 > runpointnumber
            $RandGenerator > temp811
	        awk '/VIBRATIONAL FREQUENCIES/,/NORMAL MODES/ {print $1, $2}' $freqfile | awk '$2 * $2 > 0 {print $2}' > tempfreqs
	        awk '/                  6          7/, /-----------/ {if(length($2) > 7) print $2, $3, $4, $5, $6, $7}' $freqfile > tempmodes
            awk '/FINAL ENERGY EVALUATION AT THE STATIONARY POINT|Single Point Calculation/, /INTERNAL COORDINATES/ \
			{if($4 == 0) printf("%d %c %d %.3f %.6f %.6f %.6f\n", $1, $2, $3, $5, $6/1.889726, $7/1.889726, $8/1.889726)}' $freqfile > tempmasses
	        awk -f $proggramdir/proggenHP $freqfile > geoPlusVel
            if (test -f isomernumber) then
                cp isomernumber temp533
                awk 'BEGIN {getline; i = $1 + 1; print i, "----trajectory isomer number----"}' temp533 > isomernumber
                rm temp533
            else
                echo "1 ----trajectory isomer number----" > isomernumber
            fi
            rm orca.inp
            awk -f $proggramdir/prog1stpoint isomernumber > orca.inp
#  B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2  if first part successfule then clean up and run the first input file, otherwise die
            if (test -s orca.inp) then
                rm tempfreqs tempmodes tempmasses temp811
                cat isomernumber >> geoRecord
                cat geoPlusVel >> geoRecord
                rm -f goingwell
                cd $scratchdir
                cp $origdir/orca.inp $scratchdir/orca.inp
                $orcaroot/orca $scratchdir/orca.inp > $scratchdir/orca.out
                cd $origdir
                grep 'ORCA TERMINATED NORMALLY' $scratchdir/orca.out > goingwell
                if (test -s goingwell) then
                cat $scratchdir/orca.out >> dyn
                cp $scratchdir/orca.out olderdynrun
                else
                    break             #orca failed
                fi
            else
				echo "First point isn't correctly generated!" 
                break                 
            fi
#  B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3 if B2 worked then you are here.  create 2nd point, run it, and set up for propagation loop
            rm orca.inp
            awk -f $proggramdir/prog2ndpoint $scratchdir/orca.out > orca.inp
# before we decide to run this, check the energy
            awk -f $proggramdir/proganal $scratchdir/orca.out >> dynfollowfile
            rm -f tempdone
            tail -1 dynfollowfile | awk '/XXXX/ {print}' > tempdone
            if (test  -s tempdone) then
                rm -f dyn
                rm -f traj
                break
            fi
            if (test -s orca.inp) then
                rm -f goingwell
                cd $scratchdir
                cp $origdir/orca.inp $scratchdir/orca.inp
                $orcaroot/orca $scratchdir/orca.inp > $scratchdir/orca.out
                cd $origdir
                grep 'ORCA TERMINATED NORMALLY' $scratchdir/orca.out > goingwell
                if (test -s goingwell) then
                    cp $scratchdir/orca.out olddynrun
                    cat $scratchdir/orca.out >> dyn
                    awk -f $proggramdir/proganal $scratchdir/orca.out >> dynfollowfile
                    awk '/CARTESIAN COORDINATES \(ANGSTROEM\)/,/CARTESIAN COORDINATES \(A\.U\.\)/ {print}' olddynrun | awk '(length($4) > 7) {print}'  > old
                    awk '/CARTESIAN COORDINATES \(ANGSTROEM\)/,/CARTESIAN COORDINATES \(A\.U\.\)/ {print}' olderdynrun | awk '(length($4) > 7) {print}' > older
                    awk -f $proggramdir/progdynb olddynrun > orca.inp
                    rm -f old older
                else
                    break                  #orca failed
                fi
            else
				echo "Second point isn't correctly generated!" 
                break
            fi
# we've just completed a start, so lets skipstart until instructed otherwise
            echo "forward" > skipstart
        fi
# Reverse trajectories starter routine
        if [ `cat skipstart` = "reverserestart" ]; then
            cd $origdir
            echo 3 > runpointnumber
            rm orca.inp
            awk -f $proggramdir/prog1stpoint isomernumber > orca.inp
            if (test -s orca.inp) then
                rm -f goingwell
                cd $scratchdir
                cp $origdir/orca.inp $scratchdir/orca.inp
                $orcaroot/orca $scratchdir/orca.inp > $scratchdir/orca.out
                cd $origdir
                grep 'ORCA TERMINATED NORMALLY' $scratchdir/orca.out > goingwell
                if (test -s goingwell) then
                    cp $scratchdir/orca.out olderdynrun
                else
                    break                 #orca running failed
                fi
            else
                echo "First point isn't correctly generated!"  
                break
            fi
            rm orca.inp
            awk -f $proggramdir/prog2ndpoint $scratchdir/orca.out > orca.inp
            awk -f $proggramdir/proganal $scratchdir/orca.out >> dynfollowfile
            rm -f tempdone
            if (test -s orca.inp) then
                rm -f goingwell
                cd $scratchdir
                cp $origdir/orca.inp $scratchdir/orca.inp
                $orcaroot/orca $scratchdir/orca.inp > $scratchdir/orca.out
                cd $origdir
                grep 'ORCA TERMINATED NORMALLY' $scratchdir/orca.out > goingwell
                if (test -s goingwell) then
                    cp $scratchdir/orca.out olddynrun
                    cat $scratchdir/orca.out >> dyn
                    awk -f $proggramdir/proganal $scratchdir/orca.out >> dynfollowfile
                    awk '/CARTESIAN COORDINATES \(ANGSTROEM\)/,/CARTESIAN COORDINATES \(A\.U\.\)/ {print}' olddynrun | awk '(length($4) > 7) {print}'  > old
                    awk '/CARTESIAN COORDINATES \(ANGSTROEM\)/,/CARTESIAN COORDINATES \(A\.U\.\)/ {print}' olderdynrun | awk '(length($4) > 7) {print}' > older
                    awk -f $proggramdir/progdynb olddynrun > orca.inp
                    rm -f old older
                else
                    break                #orca running failed
                fi
            else
			    echo "Second point isn't correctly generated!"  
                break
            fi
# we've just completed a reversestart, so lets skipstart until instructed otherwise
            echo "reverse" > skipstart
        fi

#  END_of_B___END_of_B___END_of_B___END_of_B___END_of_B___END_of_B___END_of_B___END_of_B___

#  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC  propagation loop
        while (true)
        do
#increment runpointnumber
            if (test -f runpointnumber) then
                cp runpointnumber temp533
                awk 'BEGIN {getline; i = $1 + 1; print i}' temp533 > runpointnumber
                rm temp533
            else
                echo 4 > runpointnumber
            fi
            rm -f goingwell
            cd $scratchdir
            echo $scratchdir
            pwd
            cp $origdir/orca.inp $scratchdir/orca.inp
            ls
            $orcaroot/orca $scratchdir/orca.inp > $scratchdir/orca.out
            cd $origdir
            grep 'ORCA TERMINATED NORMALLY' $scratchdir/orca.out > goingwell
            if (test -s goingwell) then
                cp olddynrun olderdynrun
                cp $scratchdir/orca.out olddynrun
                awk '/CARTESIAN COORDINATES \(ANGSTROEM\)/,/CARTESIAN COORDINATES \(A\.U\.\)/ {print}' olddynrun | awk '(length($4) > 7) {print}'  > old
                awk '/CARTESIAN COORDINATES \(ANGSTROEM\)/,/CARTESIAN COORDINATES \(A\.U\.\)/ {print}' olderdynrun | awk '(length($4) > 7) {print}' > older
                awk -f $proggramdir/progdynb olddynrun > orca.inp
                rm -f old older
            else
                break        #orca failed
            fi


#stop it all nicely by creating a nogo file
            if (test  -f nogo) then
                break
            fi

#figure out if this isomer is done
            awk -f $proggramdir/proganal $scratchdir/orca.out >> dynfollowfile
            rm -f tempdone
            tail -2 dynfollowfile | awk '/XXXX/ {print}' > tempdone
            if (test  -s tempdone) then
                if [ `awk '/reversetraj/ {if ($1 == "reversetraj") print $2}' progdyn.conf` = "true" ]; then
                    if [ `cat skipstart` = "reverse" ]; then
                        rm -f skipstart
                        rm -f geoPlusVel
                        rm -f olddynrun
                        rm -f olderdynrun
                        a=`awk '{print $1}' isomernumber`
                        mv traj traj$a
                        mv dyn dyn$a
                    elif [ `cat skipstart` = "forward" ]; then
                        echo reverserestart > skipstart
                    fi
                else
                    rm -f skipstart
                    rm -f geoPlusVel
                    rm -f olddynrun
                    rm -f olderdynrun
                    a=`awk '{print $1}' isomernumber`
                    mv traj traj$a
                    mv dyn dyn$a
                fi
                break
            fi
        done
#  END_of_C_Loop____END_of_C_Loop____END_of_C_Loop____END_of_C_Loop____END_of_C_Loop____END_of_C_Loop____

# We've got to break a second time to get out of this loop
# if we really want to quit.  Otherwise, it will start over
# at the top
        if (test  -f nogo) then
            break
        fi
        if (test  -s goingwell) then
            echo "starting a new point or a new direction"
        else
            break
        fi
    done

    if (test  -f nogo) then
        break
    fi
    if (test  -s goingwell) then
        echo "starting a new point or a new direction2"
    else
		echo "orca running failed, please check generated orca.inp file and if orca is correctly installed!"
        break
    fi
done
exit 0
